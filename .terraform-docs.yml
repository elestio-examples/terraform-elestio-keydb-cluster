formatter: '' # this is required

version: ''

header-from: main.tf
footer-from: ''

recursive:
  enabled: false
  path: modules

sections:
  hide: []
  show: []

content: |-
  # Elestio KeyDB Cluster Terraform module

  ## Benefits of a KeyDB cluster

  A Multi-Master KeyDB cluster is a great option to ensure high availability, it allows for easy scalability to meet changing demands without replacing the entire system.
  It can handle more requests without slowing down or crashing, and provides fault tolerance to ensure that the system remains operational.

  A multi-master scenario means that one node can be taken offline (e.g. for maintenance or upgrade purposes) without impacting availability, as the other node will continue to serve production traffic. Further, it doubles your capacity to read or write to the database and provides an additional layer of protection against data loss.

  {{ .Header }}

  ## Usage

  ```hcl
  {{ include "examples/doc/main.tf" }}
  ```

  ## What the module does

  1. It configures the KeyDB nodes to be clustered together.

  2. If you change the number of nodes and re-apply, it will automatically reconfigure the cluster for you without data-loss.

  ## Examples

  - [Get Started](https://github.com/elestio-examples/terraform-elestio-keydb-cluster/tree/main/examples/get_started) - Ready-to-deploy example which creates a KeyDB Cluster in minutes.

  ## How to use Multi-Master cluster

  Use `terraform output keydb_cluster_database_admin` command to output database secrets:

  ```bash
  {{ include "examples/doc/readme_output.sh" }}
  ```

  Here is an example of how to use the KeyDB cluster and all its nodes in the Javascript client.

  ```js
  {{ include "examples/doc/readme_how_to_use.js" }}
  ```

  ## Scale the nodes

  To adjust the cluster size:

  - Adding nodes: Run `terraform apply` after adding a new node in the config, and it will be seamlessly integrated into the cluster.
  - Removing nodes: The excess nodes will cleanly leave the cluster on the next `terraform apply`.

  Please note that changing the node count requires to change the .env of existing nodes. This is done automatically by the module.

  {{ .Footer }}
  {{ .Inputs }}
  {{ .Modules }}
  {{ .Outputs }}
  {{ .Providers }}
  {{ .Requirements }}
  {{ .Resources }}

output:
  file: ''
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

output-values:
  enabled: false
  from: ''

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: false
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
